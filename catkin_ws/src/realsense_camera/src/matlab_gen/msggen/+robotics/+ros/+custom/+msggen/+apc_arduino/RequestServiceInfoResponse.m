classdef RequestServiceInfoResponse < robotics.ros.Message
    %RequestServiceInfoResponse MATLAB implementation of apc_arduino/RequestServiceInfoResponse
    %   This class was automatically generated by
    %   robotics.ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2017 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'apc_arduino/RequestServiceInfoResponse' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = 'c3d6dd25b909596479fbbc6559fa6874' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        ServiceMd5
        RequestMd5
        ResponseMd5
    end
    
    properties (Constant, Hidden)
        PropertyList = {'RequestMd5', 'ResponseMd5', 'ServiceMd5'} % List of non-constant message properties
        ROSPropertyList = {'request_md5', 'response_md5', 'service_md5'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = RequestServiceInfoResponse(msg)
            %RequestServiceInfoResponse Construct the message object RequestServiceInfoResponse
            import com.mathworks.toolbox.robotics.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('robotics:ros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('robotics:ros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('robotics:ros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function servicemd5 = get.ServiceMd5(obj)
            %get.ServiceMd5 Get the value for property ServiceMd5
            servicemd5 = char(obj.JavaMessage.getServiceMd5);
        end
        
        function set.ServiceMd5(obj, servicemd5)
            %set.ServiceMd5 Set the value for property ServiceMd5
            validateattributes(servicemd5, {'char'}, {}, 'RequestServiceInfoResponse', 'ServiceMd5');
            
            obj.JavaMessage.setServiceMd5(servicemd5);
        end
        
        function requestmd5 = get.RequestMd5(obj)
            %get.RequestMd5 Get the value for property RequestMd5
            requestmd5 = char(obj.JavaMessage.getRequestMd5);
        end
        
        function set.RequestMd5(obj, requestmd5)
            %set.RequestMd5 Set the value for property RequestMd5
            validateattributes(requestmd5, {'char'}, {}, 'RequestServiceInfoResponse', 'RequestMd5');
            
            obj.JavaMessage.setRequestMd5(requestmd5);
        end
        
        function responsemd5 = get.ResponseMd5(obj)
            %get.ResponseMd5 Get the value for property ResponseMd5
            responsemd5 = char(obj.JavaMessage.getResponseMd5);
        end
        
        function set.ResponseMd5(obj, responsemd5)
            %set.ResponseMd5 Set the value for property ResponseMd5
            validateattributes(responsemd5, {'char'}, {}, 'RequestServiceInfoResponse', 'ResponseMd5');
            
            obj.JavaMessage.setResponseMd5(responsemd5);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@robotics.ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.ServiceMd5 = obj.ServiceMd5;
            cpObj.RequestMd5 = obj.RequestMd5;
            cpObj.ResponseMd5 = obj.ResponseMd5;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.ServiceMd5 = strObj.ServiceMd5;
            obj.RequestMd5 = strObj.RequestMd5;
            obj.ResponseMd5 = strObj.ResponseMd5;
        end
    end
    
    methods (Access = ?robotics.ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.ServiceMd5 = obj.ServiceMd5;
            strObj.RequestMd5 = obj.RequestMd5;
            strObj.ResponseMd5 = obj.ResponseMd5;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?robotics.ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = robotics.ros.custom.msggen.apc_arduino.RequestServiceInfoResponse.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = robotics.ros.custom.msggen.apc_arduino.RequestServiceInfoResponse;
            obj.reload(strObj);
        end
    end
end
